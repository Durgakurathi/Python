#Bubble Sort by using Negative for loop
def bubbleSort(l):
    for i in range(len(l)-1,0,-1):
        for j in range(0,i):
            if l[j]>l[j+1]:
                l[j],l[j+1]=l[j+1],l[j]
    return l
l=list(map(int,input().split()))
print(bubbleSort(l))

#Bubble Sort by using  for loop
def bubbleSort(l):
    for i in range(len(l)-1):
        for j in range(len(l)-i-1):
            if l[j]>l[j+1]:
                l[j],l[j+1]=l[j+1],l[j]
    return l
l=list(map(int,input().split()))
print(bubbleSort(l))

#Bubble Sort by using Recursion
def bubbleSort(l,i,j):
    if i==len(l)-1:
        return l
    if j==(len(l)-i-1)-1:
       return  bubbleSort(l,i+1,0)
    if l[j]>l[j+1]:
        l[j],l[j+1]=l[j+1],l[j] 
    return bubbleSort(l,i,j+1)
l=list(map(int,input().split()))
print(bubbleSort(l,0,0))
#Selection Sort by using  for loop
def SelectionSort(l):
    for i in range(len(l)-1):
            for j in range(i+1,len(l)):
                if l[i]>l[j]:
                    l[i],l[j]=l[j],l[i]
    return l    
l=list(map(int,input().split()))
print(SelectionSort(l))
#Selection Sort by using  Recursion
def SelectionSort(l,i,j):
    if i==len(l)-1:
        return l
    if j==len(l):
        return SelectionSort(l,i+1,i+2)
    if l[i]>l[j]:
        l[i],l[j]=l[j],l[i]
    return SelectionSort(l,i,j+1)
l=list(map(int,input().split()))
print(SelectionSort(l,0,1))

#Insertion Sort by using  for loop
def insertionSort(l):
    for i in range(1,len(l)):
            for j in range(i-1,-1,-1):
                if l[j+1]<l[j]:
                    l[j+1],l[j]=l[j],l[j+1]
    return l    
l=list(map(int,input().split()))
print(insertionSort(l))

#Insertion Sort by using  Recursion
def insertionSort(l,i,j):
    if i==len(l):
        return l
    if j==len(l) or j<0:
        return insertionSort(l,i+1,i)
    if l[j]>l[j+1]:
        l[j+1],l[j]=l[j],l[j+1]
    return insertionSort(l,i,j-1)
l=list(map(int,input().split()))
print(insertionSort(l,1,0))
#Merge Sort
def merge(arr,l,m,r):
    temp=[]
    low=l
    high=m+1
    while(low<=m and high<=r):
        if arr[low]<=arr[high]:
            temp.append(arr[low])
            low+=1
        else:
            temp.append(arr[high])
            high+=1
    while(low<=m):
        temp.append(arr[low])
        low+=1
    while(high<=r):
        temp.append(arr[high])
        high+=1
    for i in range(len(temp)):
        arr[l+i]=temp[i]
    
# l=left,r=right,m=middle
def mergeSort(arr,l,r):
    if l<r:
        m=(l+r)//2
        mergeSort(arr,l,m)
        mergeSort(arr,m+1,r)
        merge(arr,l,m,r)
    return arr

arr=list(map(int,input().split()))
print(mergeSort(arr,0,len(arr)-1))

#Quick Sort
def Pivot(arr,pivot,end):
    temp=pivot
    for i in range(pivot+1,end+1):
        if arr[i]<arr[pivot]:
            temp+=1
            arr[i],arr[temp]=arr[temp],arr[i]
    arr[temp],arr[pivot]=arr[pivot],arr[temp]
    return temp
def quickSort(arr,l,r):
    if l<r:
        p=Pivot(arr,l,r)
        #left sub array
        quickSort(arr,l,p-1)
        #Right sub array
        quickSort(arr,p+1,r)
    return arr
arr=list(map(int,input().split()))
print(quickSort(arr,0,len(arr)-1))
